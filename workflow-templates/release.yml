name: "Post-Integration: Release"

on:
  workflow_dispatch:
    inputs:
      key:
        required: true
        description: 'The JIRA Issue Key'

jobs:
  teardown:
    runs-on: ubuntu-20.04
    env:
      KEY: ${{ github.event.inputs.key }}
    steps:
      - uses: actions/checkout@v2
      # Cache terraform
      - uses: actions/cache@v2
        with:
          path: .terraform/providers
          key: ${{ runner.os }}-terraform-${{ hashFiles('.terraform.lock.hcl') }}
          restore-keys: ${{ runner.os }}-terraform-
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Create kubeconfig
        run: aws eks update-kubeconfig --name ${K8S_CLUSTER}
        env:
          K8S_CLUSTER: ""
      - name: Terraform Init
        run: terraform init -backend-config bucket=${TF_S3_BUCKET} -backend-config key=${TF_S3_KEY}
        env:
          TF_S3_BUCKET: ""
          TF_S3_KEY: ""
      - run: terraform workspace select ${KEY^^}
      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var namespace=${NAMESPACE_PREFIX}-${KEY,,} -var host=${SUBDOMAIN_PREFIX}-${KEY,,}.${DOMAIN}
        env:
          KUBE_CONFIG_PATH: ~/.kube/config
          NAMESPACE_PREFIX: ""
          # Terraform input
          TF_VAR_route53_access_key: ${{ secrets.ROUTE53_ACCESS_KEY_ID }}
          TF_VAR_route53_secret_key: ${{ secrets.ROUTE53_SECRET_ACCESS_KEY }}
          TF_VAR_route53_region: ap-southeast-1
          TF_VAR_route53_zone_id: ${{ secrets.ROUTE53_HOSTED_ZONE_ID }}
          # @see https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html
          # for possible dns record type
          TF_VAR_route53_type: ""
          # Define additional terraform input here
          # @see https://www.terraform.io/docs/language/values/variables.html#environment-variables
      - run: |
          terraform workspace select default
          terraform workspace delete ${KEY^^}

  release:
    runs-on: ubuntu-20.04
    needs: [ teardown ]
    steps:
      # Convert input to UPPERCASE
      - id: key
        run: echo "::set-output name=key::${KEY^^}"
        env:
          KEY: ${{ github.event.inputs.key }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.key.outputs.key }}
          fetch-depth: 0
      - uses: sepulsa/post-integration-action/release@main
        with:
          key: ${{ steps.key.outputs.key }}
          token: ${{ secrets.RELEASE_TOKEN }}
